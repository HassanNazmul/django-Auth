"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u3uplw=pfqvq241ewuz+$*lmt0gau!6-#=fn@ws-v#5h=@uf)s'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_PARTY_APPS = [
    'rest_framework',  # Django REST Framework
    'dj_rest_auth',  # dj-rest-auth for authentication
    'corsheaders',  # Cross-Origin support
]

INSTALLED_APPS += THIRD_PARTY_APPS

MY_APPS = [
    'user_management.apps.UserManagementConfig',
]

INSTALLED_APPS += MY_APPS

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Add this for CORS support
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom settings.py for Django REST framework settings
REST_FRAMEWORK = {
    # Default Date and Time format for serialized data output
    'DATETIME_FORMAT': "%d-%b-%Y, %a %I:%M %p",  # Format: Day-Month-Year, Weekday Hour:Minute AM/PM
    'DATE_FORMAT': '%d-%b-%Y',  # Format: Day-Month-Year for date fields

    # Default authentication classes to be used in the REST API
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',  # Use session-based authentication for browser clients
    ],
    # Default permission classes that determine who has access to the API views
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',  # Require authenticated users by default for all views
    ],
}

CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',  # Allow requests from your Next.js frontend
    # Add your production domain here as well if needed
]

# If you want to allow credentials (cookies, session):
CORS_ALLOW_CREDENTIALS = True

# Optionally allow specific headers if needed
CORS_ALLOW_HEADERS = [
    'Content-Type',  # Needed for sending JSON or form data
    'X-CSRFToken',  # Required for CSRF protection
]

# Cookie settings to enhance security and enforce CSRF protection
SESSION_COOKIE_SECURE = True  # Only send session cookies over HTTPS to prevent interception
SESSION_COOKIE_HTTPONLY = True  # Prevent JavaScript access to session cookies to reduce XSS attack risk
SESSION_COOKIE_SAMESITE = 'Lax'  # Restrict cross-site sending of session cookies, but allow it for top-level navigation
CSRF_COOKIE_SECURE = True  # Only send CSRF cookies over HTTPS to prevent CSRF attacks
CSRF_COOKIE_HTTPONLY = True  # Prevent JavaScript access to CSRF cookies to reduce XSS attack risk
CSRF_COOKIE_SAMESITE = 'Lax'  # Restrict cross-site sending of CSRF cookies, but allow it for top-level navigation
